class_map
12
A
1
initializer
var
Int
9
Int
integer
0
A2I
0
B
1
initializer
var
Int
9
Int
integer
0
Bool
0
C
1
initializer
var
Int
9
Int
integer
0
D
1
initializer
var
Int
9
Int
integer
0
E
1
initializer
var
Int
9
Int
integer
0
IO
0
Int
0
Main
4
no_initializer
char
String
no_initializer
avar
A
no_initializer
a_var
A
initializer
flag
Bool
257
Bool
true
Object
0
String
0
implementation_map
12
A
10
abort
0
Object
0
Object
internal
Object.abort
copy
0
Object
0
SELF_TYPE
internal
Object.copy
type_name
0
Object
0
String
internal
Object.type_name
value
0
A
11
Int
identifier
11
var
set_var
1
num
A
14
SELF_TYPE
block
2
15
Int
assign
15
var
15
Int
identifier
15
num
16
SELF_TYPE
identifier
16
self
method1
1
num
A
21
SELF_TYPE
identifier
21
self
method2
2
num1
num2
A
25
B
let
1
let_binding_no_init
25
x
25
Int
26
B
block
2
27
Int
assign
27
x
27
Int
plus
27
Int
identifier
27
num1
27
Int
identifier
27
num2
28
B
dynamic_dispatch
28
B
new
28
B
28
set_var
1
28
Int
identifier
28
x
method3
1
num
A
34
C
let
1
let_binding_no_init
34
x
34
Int
35
C
block
2
36
Int
assign
36
x
36
Int
negate
36
Int
identifier
36
num
37
C
dynamic_dispatch
37
C
new
37
C
37
set_var
1
37
Int
identifier
37
x
method4
2
num1
num2
A
43
D
if
43
Bool
lt
43
Int
identifier
43
num2
43
Int
identifier
43
num1
44
D
let
1
let_binding_no_init
44
x
44
Int
45
D
block
2
46
Int
assign
46
x
46
Int
minus
46
Int
identifier
46
num1
46
Int
identifier
46
num2
47
D
dynamic_dispatch
47
D
new
47
D
47
set_var
1
47
Int
identifier
47
x
51
D
let
1
let_binding_no_init
51
x
51
Int
52
D
block
2
53
Int
assign
53
x
53
Int
minus
53
Int
identifier
53
num2
53
Int
identifier
53
num1
54
D
dynamic_dispatch
54
D
new
54
D
54
set_var
1
54
Int
identifier
54
x
method5
1
num
A
61
E
let
1
let_binding_init
61
x
61
Int
61
Int
integer
1
62
E
block
2
63
Object
let
1
let_binding_init
63
y
63
Int
63
Int
integer
1
64
Object
while
64
Bool
le
64
Int
identifier
64
y
64
Int
identifier
64
num
65
SELF_TYPE
block
3
66
Int
assign
66
x
66
Int
times
66
Int
identifier
66
x
66
Int
identifier
66
y
67
Int
assign
67
y
67
Int
plus
67
Int
identifier
67
y
67
Int
integer
1
68
SELF_TYPE
new
68
SELF_TYPE
72
E
dynamic_dispatch
72
E
new
72
E
72
set_var
1
72
Int
identifier
72
x
A2I
9
abort
0
Object
0
Object
internal
Object.abort
copy
0
Object
0
SELF_TYPE
internal
Object.copy
type_name
0
Object
0
String
internal
Object.type_name
c2i
1
char
A2I
159
Int
if
159
Bool
eq
159
String
identifier
159
char
159
String
string
0
159
Int
integer
0
160
Int
if
160
Bool
eq
160
String
identifier
160
char
160
String
string
1
160
Int
integer
1
161
Int
if
161
Bool
eq
161
String
identifier
161
char
161
String
string
2
161
Int
integer
2
162
Int
if
162
Bool
eq
162
String
identifier
162
char
162
String
string
3
162
Int
integer
3
163
Int
if
163
Bool
eq
163
String
identifier
163
char
163
String
string
4
163
Int
integer
4
164
Int
if
164
Bool
eq
164
String
identifier
164
char
164
String
string
5
164
Int
integer
5
165
Int
if
165
Bool
eq
165
String
identifier
165
char
165
String
string
6
165
Int
integer
6
166
Int
if
166
Bool
eq
166
String
identifier
166
char
166
String
string
7
166
Int
integer
7
167
Int
if
167
Bool
eq
167
String
identifier
167
char
167
String
string
8
167
Int
integer
8
168
Int
if
168
Bool
eq
168
String
identifier
168
char
168
String
string
9
168
Int
integer
9
169
Int
block
2
169
Object
self_dispatch
169
abort
0
169
Int
integer
0
i2c
1
i
A2I
178
String
if
178
Bool
eq
178
Int
identifier
178
i
178
Int
integer
0
178
String
string
0
179
String
if
179
Bool
eq
179
Int
identifier
179
i
179
Int
integer
1
179
String
string
1
180
String
if
180
Bool
eq
180
Int
identifier
180
i
180
Int
integer
2
180
String
string
2
181
String
if
181
Bool
eq
181
Int
identifier
181
i
181
Int
integer
3
181
String
string
3
182
String
if
182
Bool
eq
182
Int
identifier
182
i
182
Int
integer
4
182
String
string
4
183
String
if
183
Bool
eq
183
Int
identifier
183
i
183
Int
integer
5
183
String
string
5
184
String
if
184
Bool
eq
184
Int
identifier
184
i
184
Int
integer
6
184
String
string
6
185
String
if
185
Bool
eq
185
Int
identifier
185
i
185
Int
integer
7
185
String
string
7
186
String
if
186
Bool
eq
186
Int
identifier
186
i
186
Int
integer
8
186
String
string
8
187
String
if
187
Bool
eq
187
Int
identifier
187
i
187
Int
integer
9
187
String
string
9
188
String
block
2
188
Object
self_dispatch
188
abort
0
188
String
string

a2i
1
s
A2I
201
Int
if
201
Bool
eq
201
Int
dynamic_dispatch
201
String
identifier
201
s
201
length
0
201
Int
integer
0
201
Int
integer
0
202
Int
if
202
Bool
eq
202
String
dynamic_dispatch
202
String
identifier
202
s
202
substr
2
202
Int
integer
0
202
Int
integer
1
202
String
string
-
202
Int
negate
202
Int
self_dispatch
202
a2i_aux
1
202
String
dynamic_dispatch
202
String
identifier
202
s
202
substr
2
202
Int
integer
1
202
Int
minus
202
Int
dynamic_dispatch
202
String
identifier
202
s
202
length
0
202
Int
integer
1
203
Int
if
203
Bool
eq
203
String
dynamic_dispatch
203
String
identifier
203
s
203
substr
2
203
Int
integer
0
203
Int
integer
1
203
String
string
+
203
Int
self_dispatch
203
a2i_aux
1
203
String
dynamic_dispatch
203
String
identifier
203
s
203
substr
2
203
Int
integer
1
203
Int
minus
203
Int
dynamic_dispatch
203
String
identifier
203
s
203
length
0
203
Int
integer
1
204
Int
self_dispatch
204
a2i_aux
1
204
String
identifier
204
s
a2i_aux
1
s
A2I
213
Int
let
1
let_binding_init
213
int
213
Int
213
Int
integer
0
214
Int
block
2
215
Object
let
1
let_binding_init
215
j
215
Int
215
Int
dynamic_dispatch
215
String
identifier
215
s
215
length
0
216
Object
let
1
let_binding_init
216
i
216
Int
216
Int
integer
0
217
Object
while
217
Bool
lt
217
Int
identifier
217
i
217
Int
identifier
217
j
218
Int
block
2
219
Int
assign
219
int
219
Int
plus
219
Int
times
219
Int
identifier
219
int
219
Int
integer
10
219
Int
self_dispatch
219
c2i
1
219
String
dynamic_dispatch
219
String
identifier
219
s
219
substr
2
219
Int
identifier
219
i
219
Int
integer
1
220
Int
assign
220
i
220
Int
plus
220
Int
identifier
220
i
220
Int
integer
1
225
Int
identifier
225
int
i2a
1
i
A2I
234
String
if
234
Bool
eq
234
Int
identifier
234
i
234
Int
integer
0
234
String
string
0
235
String
if
235
Bool
lt
235
Int
integer
0
235
Int
identifier
235
i
235
String
self_dispatch
235
i2a_aux
1
235
Int
identifier
235
i
236
String
dynamic_dispatch
236
String
string
-
236
concat
1
236
String
self_dispatch
236
i2a_aux
1
236
Int
times
236
Int
identifier
236
i
236
Int
negate
236
Int
integer
1
i2a_aux
1
i
A2I
243
String
if
243
Bool
eq
243
Int
identifier
243
i
243
Int
integer
0
243
String
string

244
String
let
1
let_binding_init
244
next
244
Int
244
Int
divide
244
Int
identifier
244
i
244
Int
integer
10
245
String
dynamic_dispatch
245
String
self_dispatch
245
i2a_aux
1
245
Int
identifier
245
next
245
concat
1
245
String
self_dispatch
245
i2c
1
245
Int
minus
245
Int
identifier
245
i
245
Int
times
245
Int
identifier
245
next
245
Int
integer
10
B
10
abort
0
Object
0
Object
internal
Object.abort
copy
0
Object
0
SELF_TYPE
internal
Object.copy
type_name
0
Object
0
String
internal
Object.type_name
value
0
A
11
Int
identifier
11
var
set_var
1
num
A
14
SELF_TYPE
block
2
15
Int
assign
15
var
15
Int
identifier
15
num
16
SELF_TYPE
identifier
16
self
method1
1
num
A
21
SELF_TYPE
identifier
21
self
method2
2
num1
num2
A
25
B
let
1
let_binding_no_init
25
x
25
Int
26
B
block
2
27
Int
assign
27
x
27
Int
plus
27
Int
identifier
27
num1
27
Int
identifier
27
num2
28
B
dynamic_dispatch
28
B
new
28
B
28
set_var
1
28
Int
identifier
28
x
method3
1
num
A
34
C
let
1
let_binding_no_init
34
x
34
Int
35
C
block
2
36
Int
assign
36
x
36
Int
negate
36
Int
identifier
36
num
37
C
dynamic_dispatch
37
C
new
37
C
37
set_var
1
37
Int
identifier
37
x
method4
2
num1
num2
A
43
D
if
43
Bool
lt
43
Int
identifier
43
num2
43
Int
identifier
43
num1
44
D
let
1
let_binding_no_init
44
x
44
Int
45
D
block
2
46
Int
assign
46
x
46
Int
minus
46
Int
identifier
46
num1
46
Int
identifier
46
num2
47
D
dynamic_dispatch
47
D
new
47
D
47
set_var
1
47
Int
identifier
47
x
51
D
let
1
let_binding_no_init
51
x
51
Int
52
D
block
2
53
Int
assign
53
x
53
Int
minus
53
Int
identifier
53
num2
53
Int
identifier
53
num1
54
D
dynamic_dispatch
54
D
new
54
D
54
set_var
1
54
Int
identifier
54
x
method5
1
num
B
82
E
let
1
let_binding_no_init
82
x
82
Int
83
E
block
2
84
Int
assign
84
x
84
Int
times
84
Int
identifier
84
num
84
Int
identifier
84
num
85
E
dynamic_dispatch
85
E
new
85
E
85
set_var
1
85
Int
identifier
85
x
Bool
3
abort
0
Object
0
Object
internal
Object.abort
copy
0
Object
0
SELF_TYPE
internal
Object.copy
type_name
0
Object
0
String
internal
Object.type_name
C
11
abort
0
Object
0
Object
internal
Object.abort
copy
0
Object
0
SELF_TYPE
internal
Object.copy
type_name
0
Object
0
String
internal
Object.type_name
value
0
A
11
Int
identifier
11
var
set_var
1
num
A
14
SELF_TYPE
block
2
15
Int
assign
15
var
15
Int
identifier
15
num
16
SELF_TYPE
identifier
16
self
method1
1
num
A
21
SELF_TYPE
identifier
21
self
method2
2
num1
num2
A
25
B
let
1
let_binding_no_init
25
x
25
Int
26
B
block
2
27
Int
assign
27
x
27
Int
plus
27
Int
identifier
27
num1
27
Int
identifier
27
num2
28
B
dynamic_dispatch
28
B
new
28
B
28
set_var
1
28
Int
identifier
28
x
method3
1
num
A
34
C
let
1
let_binding_no_init
34
x
34
Int
35
C
block
2
36
Int
assign
36
x
36
Int
negate
36
Int
identifier
36
num
37
C
dynamic_dispatch
37
C
new
37
C
37
set_var
1
37
Int
identifier
37
x
method4
2
num1
num2
A
43
D
if
43
Bool
lt
43
Int
identifier
43
num2
43
Int
identifier
43
num1
44
D
let
1
let_binding_no_init
44
x
44
Int
45
D
block
2
46
Int
assign
46
x
46
Int
minus
46
Int
identifier
46
num1
46
Int
identifier
46
num2
47
D
dynamic_dispatch
47
D
new
47
D
47
set_var
1
47
Int
identifier
47
x
51
D
let
1
let_binding_no_init
51
x
51
Int
52
D
block
2
53
Int
assign
53
x
53
Int
minus
53
Int
identifier
53
num2
53
Int
identifier
53
num1
54
D
dynamic_dispatch
54
D
new
54
D
54
set_var
1
54
Int
identifier
54
x
method5
1
num
C
104
E
let
1
let_binding_no_init
104
x
104
Int
105
E
block
2
106
Int
assign
106
x
106
Int
times
106
Int
times
106
Int
identifier
106
num
106
Int
identifier
106
num
106
Int
identifier
106
num
107
E
dynamic_dispatch
107
E
new
107
E
107
set_var
1
107
Int
identifier
107
x
method6
1
num
C
95
A
let
1
let_binding_no_init
95
x
95
Int
96
A
block
2
97
Int
assign
97
x
97
Int
negate
97
Int
identifier
97
num
98
A
dynamic_dispatch
98
A
new
98
A
98
set_var
1
98
Int
identifier
98
x
D
11
abort
0
Object
0
Object
internal
Object.abort
copy
0
Object
0
SELF_TYPE
internal
Object.copy
type_name
0
Object
0
String
internal
Object.type_name
value
0
A
11
Int
identifier
11
var
set_var
1
num
A
14
SELF_TYPE
block
2
15
Int
assign
15
var
15
Int
identifier
15
num
16
SELF_TYPE
identifier
16
self
method1
1
num
A
21
SELF_TYPE
identifier
21
self
method2
2
num1
num2
A
25
B
let
1
let_binding_no_init
25
x
25
Int
26
B
block
2
27
Int
assign
27
x
27
Int
plus
27
Int
identifier
27
num1
27
Int
identifier
27
num2
28
B
dynamic_dispatch
28
B
new
28
B
28
set_var
1
28
Int
identifier
28
x
method3
1
num
A
34
C
let
1
let_binding_no_init
34
x
34
Int
35
C
block
2
36
Int
assign
36
x
36
Int
negate
36
Int
identifier
36
num
37
C
dynamic_dispatch
37
C
new
37
C
37
set_var
1
37
Int
identifier
37
x
method4
2
num1
num2
A
43
D
if
43
Bool
lt
43
Int
identifier
43
num2
43
Int
identifier
43
num1
44
D
let
1
let_binding_no_init
44
x
44
Int
45
D
block
2
46
Int
assign
46
x
46
Int
minus
46
Int
identifier
46
num1
46
Int
identifier
46
num2
47
D
dynamic_dispatch
47
D
new
47
D
47
set_var
1
47
Int
identifier
47
x
51
D
let
1
let_binding_no_init
51
x
51
Int
52
D
block
2
53
Int
assign
53
x
53
Int
minus
53
Int
identifier
53
num2
53
Int
identifier
53
num1
54
D
dynamic_dispatch
54
D
new
54
D
54
set_var
1
54
Int
identifier
54
x
method5
1
num
B
82
E
let
1
let_binding_no_init
82
x
82
Int
83
E
block
2
84
Int
assign
84
x
84
Int
times
84
Int
identifier
84
num
84
Int
identifier
84
num
85
E
dynamic_dispatch
85
E
new
85
E
85
set_var
1
85
Int
identifier
85
x
method7
1
num
D
117
Bool
let
1
let_binding_init
117
x
117
Int
117
Int
identifier
117
num
118
Bool
if
118
Bool
lt
118
Int
identifier
118
x
118
Int
integer
0
118
Bool
self_dispatch
118
method7
1
118
Int
negate
118
Int
identifier
118
x
119
Bool
if
119
Bool
eq
119
Int
integer
0
119
Int
identifier
119
x
119
Bool
true
120
Bool
if
120
Bool
eq
120
Int
integer
1
120
Int
identifier
120
x
120
Bool
false
121
Bool
if
121
Bool
eq
121
Int
integer
2
121
Int
identifier
121
x
121
Bool
false
122
Bool
self_dispatch
122
method7
1
122
Int
minus
122
Int
identifier
122
x
122
Int
integer
3
E
12
abort
0
Object
0
Object
internal
Object.abort
copy
0
Object
0
SELF_TYPE
internal
Object.copy
type_name
0
Object
0
String
internal
Object.type_name
value
0
A
11
Int
identifier
11
var
set_var
1
num
A
14
SELF_TYPE
block
2
15
Int
assign
15
var
15
Int
identifier
15
num
16
SELF_TYPE
identifier
16
self
method1
1
num
A
21
SELF_TYPE
identifier
21
self
method2
2
num1
num2
A
25
B
let
1
let_binding_no_init
25
x
25
Int
26
B
block
2
27
Int
assign
27
x
27
Int
plus
27
Int
identifier
27
num1
27
Int
identifier
27
num2
28
B
dynamic_dispatch
28
B
new
28
B
28
set_var
1
28
Int
identifier
28
x
method3
1
num
A
34
C
let
1
let_binding_no_init
34
x
34
Int
35
C
block
2
36
Int
assign
36
x
36
Int
negate
36
Int
identifier
36
num
37
C
dynamic_dispatch
37
C
new
37
C
37
set_var
1
37
Int
identifier
37
x
method4
2
num1
num2
A
43
D
if
43
Bool
lt
43
Int
identifier
43
num2
43
Int
identifier
43
num1
44
D
let
1
let_binding_no_init
44
x
44
Int
45
D
block
2
46
Int
assign
46
x
46
Int
minus
46
Int
identifier
46
num1
46
Int
identifier
46
num2
47
D
dynamic_dispatch
47
D
new
47
D
47
set_var
1
47
Int
identifier
47
x
51
D
let
1
let_binding_no_init
51
x
51
Int
52
D
block
2
53
Int
assign
53
x
53
Int
minus
53
Int
identifier
53
num2
53
Int
identifier
53
num1
54
D
dynamic_dispatch
54
D
new
54
D
54
set_var
1
54
Int
identifier
54
x
method5
1
num
B
82
E
let
1
let_binding_no_init
82
x
82
Int
83
E
block
2
84
Int
assign
84
x
84
Int
times
84
Int
identifier
84
num
84
Int
identifier
84
num
85
E
dynamic_dispatch
85
E
new
85
E
85
set_var
1
85
Int
identifier
85
x
method7
1
num
D
117
Bool
let
1
let_binding_init
117
x
117
Int
117
Int
identifier
117
num
118
Bool
if
118
Bool
lt
118
Int
identifier
118
x
118
Int
integer
0
118
Bool
self_dispatch
118
method7
1
118
Int
negate
118
Int
identifier
118
x
119
Bool
if
119
Bool
eq
119
Int
integer
0
119
Int
identifier
119
x
119
Bool
true
120
Bool
if
120
Bool
eq
120
Int
integer
1
120
Int
identifier
120
x
120
Bool
false
121
Bool
if
121
Bool
eq
121
Int
integer
2
121
Int
identifier
121
x
121
Bool
false
122
Bool
self_dispatch
122
method7
1
122
Int
minus
122
Int
identifier
122
x
122
Int
integer
3
method6
1
num
E
132
A
let
1
let_binding_no_init
132
x
132
Int
133
A
block
2
134
Int
assign
134
x
134
Int
divide
134
Int
identifier
134
num
134
Int
integer
8
135
A
dynamic_dispatch
135
A
new
135
A
135
set_var
1
135
Int
identifier
135
x
IO
7
abort
0
Object
0
Object
internal
Object.abort
copy
0
Object
0
SELF_TYPE
internal
Object.copy
type_name
0
Object
0
String
internal
Object.type_name
in_int
0
IO
0
Int
internal
IO.in_int
in_string
0
IO
0
String
internal
IO.in_string
out_int
1
x
IO
0
SELF_TYPE
internal
IO.out_int
out_string
1
x
IO
0
SELF_TYPE
internal
IO.out_string
Int
3
abort
0
Object
0
Object
internal
Object.abort
copy
0
Object
0
SELF_TYPE
internal
Object.copy
type_name
0
Object
0
String
internal
Object.type_name
Main
14
abort
0
Object
0
Object
internal
Object.abort
copy
0
Object
0
SELF_TYPE
internal
Object.copy
type_name
0
Object
0
String
internal
Object.type_name
in_int
0
IO
0
Int
internal
IO.in_int
in_string
0
IO
0
String
internal
IO.in_string
out_int
1
x
IO
0
SELF_TYPE
internal
IO.out_int
out_string
1
x
IO
0
SELF_TYPE
internal
IO.out_string
menu
0
Main
261
String
block
27
262
SELF_TYPE
self_dispatch
262
out_string
1
262
String
string
\n\tTo add a number to 
263
SELF_TYPE
self_dispatch
263
print
1
263
A
identifier
263
avar
264
SELF_TYPE
self_dispatch
264
out_string
1
264
String
string
...enter a:\n
265
SELF_TYPE
self_dispatch
265
out_string
1
265
String
string
\tTo negate 
266
SELF_TYPE
self_dispatch
266
print
1
266
A
identifier
266
avar
267
SELF_TYPE
self_dispatch
267
out_string
1
267
String
string
...enter b:\n
268
SELF_TYPE
self_dispatch
268
out_string
1
268
String
string
\tTo find the difference between 
269
SELF_TYPE
self_dispatch
269
print
1
269
A
identifier
269
avar
270
SELF_TYPE
self_dispatch
270
out_string
1
270
String
string
and another number...enter c:\n
271
SELF_TYPE
self_dispatch
271
out_string
1
271
String
string
\tTo find the factorial of 
272
SELF_TYPE
self_dispatch
272
print
1
272
A
identifier
272
avar
273
SELF_TYPE
self_dispatch
273
out_string
1
273
String
string
...enter d:\n
274
SELF_TYPE
self_dispatch
274
out_string
1
274
String
string
\tTo square 
275
SELF_TYPE
self_dispatch
275
print
1
275
A
identifier
275
avar
276
SELF_TYPE
self_dispatch
276
out_string
1
276
String
string
...enter e:\n
277
SELF_TYPE
self_dispatch
277
out_string
1
277
String
string
\tTo cube 
278
SELF_TYPE
self_dispatch
278
print
1
278
A
identifier
278
avar
279
SELF_TYPE
self_dispatch
279
out_string
1
279
String
string
...enter f:\n
280
SELF_TYPE
self_dispatch
280
out_string
1
280
String
string
\tTo find out if 
281
SELF_TYPE
self_dispatch
281
print
1
281
A
identifier
281
avar
282
SELF_TYPE
self_dispatch
282
out_string
1
282
String
string
is a multiple of 3...enter g:\n
283
SELF_TYPE
self_dispatch
283
out_string
1
283
String
string
\tTo divide 
284
SELF_TYPE
self_dispatch
284
print
1
284
A
identifier
284
avar
285
SELF_TYPE
self_dispatch
285
out_string
1
285
String
string
by 8...enter h:\n
286
SELF_TYPE
self_dispatch
286
out_string
1
286
String
string
\tTo get a new number...enter j:\n
287
SELF_TYPE
self_dispatch
287
out_string
1
287
String
string
\tTo quit...enter q:\n\n
288
String
self_dispatch
288
in_string
0
prompt
0
Main
293
String
block
3
294
SELF_TYPE
self_dispatch
294
out_string
1
294
String
string
\n
295
SELF_TYPE
self_dispatch
295
out_string
1
295
String
string
Please enter a number...  
296
String
self_dispatch
296
in_string
0
get_int
0
Main
301
Int
block
1
302
Int
let
1
let_binding_init
302
z
302
A2I
302
A2I
new
302
A2I
303
Int
let
1
let_binding_init
303
s
303
String
303
String
self_dispatch
303
prompt
0
304
Int
dynamic_dispatch
304
A2I
identifier
304
z
304
a2i
1
304
String
identifier
304
s
is_even
1
num
Main
311
Bool
let
1
let_binding_init
311
x
311
Int
311
Int
identifier
311
num
312
Bool
if
312
Bool
lt
312
Int
identifier
312
x
312
Int
integer
0
312
Bool
self_dispatch
312
is_even
1
312
Int
negate
312
Int
identifier
312
x
313
Bool
if
313
Bool
eq
313
Int
integer
0
313
Int
identifier
313
x
313
Bool
true
314
Bool
if
314
Bool
eq
314
Int
integer
1
314
Int
identifier
314
x
314
Bool
false
315
Bool
self_dispatch
315
is_even
1
315
Int
minus
315
Int
identifier
315
x
315
Int
integer
2
class_type
1
var
Main
321
SELF_TYPE
case
321
A
identifier
321
var
6
322
a
322
A
322
SELF_TYPE
self_dispatch
322
out_string
1
322
String
string
Class type is now A\n
323
b
323
B
323
SELF_TYPE
self_dispatch
323
out_string
1
323
String
string
Class type is now B\n
324
c
324
C
324
SELF_TYPE
self_dispatch
324
out_string
1
324
String
string
Class type is now C\n
325
d
325
D
325
SELF_TYPE
self_dispatch
325
out_string
1
325
String
string
Class type is now D\n
326
e
326
E
326
SELF_TYPE
self_dispatch
326
out_string
1
326
String
string
Class type is now E\n
327
o
327
Object
327
SELF_TYPE
self_dispatch
327
out_string
1
327
String
string
Oooops\n
print
1
var
Main
332
SELF_TYPE
let
1
let_binding_init
332
z
332
A2I
332
A2I
new
332
A2I
333
SELF_TYPE
block
2
334
SELF_TYPE
self_dispatch
334
out_string
1
334
String
dynamic_dispatch
334
A2I
identifier
334
z
334
i2a
1
334
Int
dynamic_dispatch
334
A
identifier
334
var
334
value
0
335
SELF_TYPE
self_dispatch
335
out_string
1
335
String
string
 
main
0
Main
341
Object
block
2
342
A
assign
342
avar
342
A
new
342
A
343
Object
while
343
Bool
identifier
343
flag
344
Object
block
6
346
SELF_TYPE
self_dispatch
346
out_string
1
346
String
string
number 
347
SELF_TYPE
self_dispatch
347
print
1
347
A
identifier
347
avar
348
SELF_TYPE
if
348
Bool
self_dispatch
348
is_even
1
348
Int
dynamic_dispatch
348
A
identifier
348
avar
348
value
0
349
SELF_TYPE
self_dispatch
349
out_string
1
349
String
string
is even!\n
351
SELF_TYPE
self_dispatch
351
out_string
1
351
String
string
is odd!\n
354
SELF_TYPE
self_dispatch
354
class_type
1
354
A
identifier
354
avar
355
String
assign
355
char
355
String
self_dispatch
355
menu
0
356
Object
if
356
Bool
eq
356
String
identifier
356
char
356
String
string
a
357
B
block
2
358
A
assign
358
a_var
358
A
dynamic_dispatch
358
A
new
358
A
358
set_var
1
358
Int
self_dispatch
358
get_int
0
359
B
assign
359
avar
359
B
dynamic_dispatch
359
B
new
359
B
359
method2
2
359
Int
dynamic_dispatch
359
A
identifier
359
avar
359
value
0
359
Int
dynamic_dispatch
359
A
identifier
359
a_var
359
value
0
361
Object
if
361
Bool
eq
361
String
identifier
361
char
361
String
string
b
362
Object
case
362
A
identifier
362
avar
3
363
c
363
C
363
A
assign
363
avar
363
A
dynamic_dispatch
363
C
identifier
363
c
363
method6
1
363
Int
dynamic_dispatch
363
C
identifier
363
c
363
value
0
364
a
364
A
364
C
assign
364
avar
364
C
dynamic_dispatch
364
A
identifier
364
a
364
method3
1
364
Int
dynamic_dispatch
364
A
identifier
364
a
364
value
0
365
o
365
Object
365
Int
block
3
366
SELF_TYPE
self_dispatch
366
out_string
1
366
String
string
Oooops\n
367
Object
self_dispatch
367
abort
0
367
Int
integer
0
370
Object
if
370
Bool
eq
370
String
identifier
370
char
370
String
string
c
371
D
block
2
372
A
assign
372
a_var
372
A
dynamic_dispatch
372
A
new
372
A
372
set_var
1
372
Int
self_dispatch
372
get_int
0
373
D
assign
373
avar
373
D
dynamic_dispatch
373
D
new
373
D
373
method4
2
373
Int
dynamic_dispatch
373
A
identifier
373
avar
373
value
0
373
Int
dynamic_dispatch
373
A
identifier
373
a_var
373
value
0
375
Object
if
375
Bool
eq
375
String
identifier
375
char
375
String
string
d
375
E
assign
375
avar
375
E
static_dispatch
375
C
new
375
C
375
A
375
method5
1
375
Int
dynamic_dispatch
375
A
identifier
375
avar
375
value
0
377
Object
if
377
Bool
eq
377
String
identifier
377
char
377
String
string
e
377
E
assign
377
avar
377
E
static_dispatch
377
C
new
377
C
377
B
377
method5
1
377
Int
dynamic_dispatch
377
A
identifier
377
avar
377
value
0
379
Object
if
379
Bool
eq
379
String
identifier
379
char
379
String
string
f
379
E
assign
379
avar
379
E
static_dispatch
379
C
new
379
C
379
C
379
method5
1
379
Int
dynamic_dispatch
379
A
identifier
379
avar
379
value
0
381
Object
if
381
Bool
eq
381
String
identifier
381
char
381
String
string
g
382
SELF_TYPE
if
382
Bool
dynamic_dispatch
382
D
new
382
D
382
method7
1
382
Int
dynamic_dispatch
382
A
identifier
382
avar
382
value
0
384
SELF_TYPE
block
3
385
SELF_TYPE
self_dispatch
385
out_string
1
385
String
string
number 
386
SELF_TYPE
self_dispatch
386
print
1
386
A
identifier
386
avar
387
SELF_TYPE
self_dispatch
387
out_string
1
387
String
string
is divisible by 3.\n
390
SELF_TYPE
block
3
391
SELF_TYPE
self_dispatch
391
out_string
1
391
String
string
number 
392
SELF_TYPE
self_dispatch
392
print
1
392
A
identifier
392
avar
393
SELF_TYPE
self_dispatch
393
out_string
1
393
String
string
is not divisible by 3.\n
396
Object
if
396
Bool
eq
396
String
identifier
396
char
396
String
string
h
397
A
let
1
let_binding_no_init
397
x
397
A
398
A
block
3
399
A
assign
399
x
399
A
dynamic_dispatch
399
E
new
399
E
399
method6
1
399
Int
dynamic_dispatch
399
A
identifier
399
avar
399
value
0
400
SELF_TYPE
let
1
let_binding_init
400
r
400
Int
400
Int
minus
400
Int
dynamic_dispatch
400
A
identifier
400
avar
400
value
0
400
Int
times
400
Int
dynamic_dispatch
400
A
identifier
400
x
400
value
0
400
Int
integer
8
401
SELF_TYPE
block
6
402
SELF_TYPE
self_dispatch
402
out_string
1
402
String
string
number 
403
SELF_TYPE
self_dispatch
403
print
1
403
A
identifier
403
avar
404
SELF_TYPE
self_dispatch
404
out_string
1
404
String
string
is equal to 
405
SELF_TYPE
self_dispatch
405
print
1
405
A
identifier
405
x
406
SELF_TYPE
self_dispatch
406
out_string
1
406
String
string
times 8 with a remainder of 
407
SELF_TYPE
let
1
let_binding_init
407
a
407
A2I
407
A2I
new
407
A2I
408
SELF_TYPE
block
2
409
SELF_TYPE
self_dispatch
409
out_string
1
409
String
dynamic_dispatch
409
A2I
identifier
409
a
409
i2a
1
409
Int
identifier
409
r
410
SELF_TYPE
self_dispatch
410
out_string
1
410
String
string
\n
415
A
assign
415
avar
415
A
identifier
415
x
419
Object
if
419
Bool
eq
419
String
identifier
419
char
419
String
string
j
419
A
assign
419
avar
419
A
new
419
A
421
Object
if
421
Bool
eq
421
String
identifier
421
char
421
String
string
q
421
Bool
assign
421
flag
421
Bool
false
423
A
assign
423
avar
423
A
dynamic_dispatch
423
A
new
423
A
423
method1
1
423
Int
dynamic_dispatch
423
A
identifier
423
avar
423
value
0
Object
3
abort
0
Object
0
Object
internal
Object.abort
copy
0
Object
0
SELF_TYPE
internal
Object.copy
type_name
0
Object
0
String
internal
Object.type_name
String
6
abort
0
Object
0
Object
internal
Object.abort
copy
0
Object
0
SELF_TYPE
internal
Object.copy
type_name
0
Object
0
String
internal
Object.type_name
concat
1
s
String
0
String
internal
String.concat
length
0
String
0
Int
internal
String.length
substr
2
i
l
String
0
String
internal
String.substr
parent_map
11
A
Object
A2I
Object
B
A
Bool
Object
C
B
D
B
E
D
IO
Object
Int
Object
Main
IO
String
Object
7
7
A
no_inherits
8
attribute_init
9
var
9
Int
9
Int
integer
0
method
11
value
0
11
Int
11
Int
identifier
11
var
method
13
set_var
1
13
num
13
Int
13
SELF_TYPE
14
SELF_TYPE
block
2
15
Int
assign
15
var
15
Int
identifier
15
num
16
SELF_TYPE
identifier
16
self
method
20
method1
1
20
num
20
Int
20
SELF_TYPE
21
SELF_TYPE
identifier
21
self
method
24
method2
2
24
num1
24
Int
24
num2
24
Int
24
B
25
B
let
1
let_binding_no_init
25
x
25
Int
26
B
block
2
27
Int
assign
27
x
27
Int
plus
27
Int
identifier
27
num1
27
Int
identifier
27
num2
28
B
dynamic_dispatch
28
B
new
28
B
28
set_var
1
28
Int
identifier
28
x
method
33
method3
1
33
num
33
Int
33
C
34
C
let
1
let_binding_no_init
34
x
34
Int
35
C
block
2
36
Int
assign
36
x
36
Int
negate
36
Int
identifier
36
num
37
C
dynamic_dispatch
37
C
new
37
C
37
set_var
1
37
Int
identifier
37
x
method
42
method4
2
42
num1
42
Int
42
num2
42
Int
42
D
43
D
if
43
Bool
lt
43
Int
identifier
43
num2
43
Int
identifier
43
num1
44
D
let
1
let_binding_no_init
44
x
44
Int
45
D
block
2
46
Int
assign
46
x
46
Int
minus
46
Int
identifier
46
num1
46
Int
identifier
46
num2
47
D
dynamic_dispatch
47
D
new
47
D
47
set_var
1
47
Int
identifier
47
x
51
D
let
1
let_binding_no_init
51
x
51
Int
52
D
block
2
53
Int
assign
53
x
53
Int
minus
53
Int
identifier
53
num2
53
Int
identifier
53
num1
54
D
dynamic_dispatch
54
D
new
54
D
54
set_var
1
54
Int
identifier
54
x
method
60
method5
1
60
num
60
Int
60
E
61
E
let
1
let_binding_init
61
x
61
Int
61
Int
integer
1
62
E
block
2
63
Object
let
1
let_binding_init
63
y
63
Int
63
Int
integer
1
64
Object
while
64
Bool
le
64
Int
identifier
64
y
64
Int
identifier
64
num
65
SELF_TYPE
block
3
66
Int
assign
66
x
66
Int
times
66
Int
identifier
66
x
66
Int
identifier
66
y
67
Int
assign
67
y
67
Int
plus
67
Int
identifier
67
y
67
Int
integer
1
68
SELF_TYPE
new
68
SELF_TYPE
72
E
dynamic_dispatch
72
E
new
72
E
72
set_var
1
72
Int
identifier
72
x
79
B
inherits
79
A
1
method
81
method5
1
81
num
81
Int
81
E
82
E
let
1
let_binding_no_init
82
x
82
Int
83
E
block
2
84
Int
assign
84
x
84
Int
times
84
Int
identifier
84
num
84
Int
identifier
84
num
85
E
dynamic_dispatch
85
E
new
85
E
85
set_var
1
85
Int
identifier
85
x
92
C
inherits
92
B
2
method
94
method6
1
94
num
94
Int
94
A
95
A
let
1
let_binding_no_init
95
x
95
Int
96
A
block
2
97
Int
assign
97
x
97
Int
negate
97
Int
identifier
97
num
98
A
dynamic_dispatch
98
A
new
98
A
98
set_var
1
98
Int
identifier
98
x
method
103
method5
1
103
num
103
Int
103
E
104
E
let
1
let_binding_no_init
104
x
104
Int
105
E
block
2
106
Int
assign
106
x
106
Int
times
106
Int
times
106
Int
identifier
106
num
106
Int
identifier
106
num
106
Int
identifier
106
num
107
E
dynamic_dispatch
107
E
new
107
E
107
set_var
1
107
Int
identifier
107
x
114
D
inherits
114
B
1
method
116
method7
1
116
num
116
Int
116
Bool
117
Bool
let
1
let_binding_init
117
x
117
Int
117
Int
identifier
117
num
118
Bool
if
118
Bool
lt
118
Int
identifier
118
x
118
Int
integer
0
118
Bool
self_dispatch
118
method7
1
118
Int
negate
118
Int
identifier
118
x
119
Bool
if
119
Bool
eq
119
Int
integer
0
119
Int
identifier
119
x
119
Bool
true
120
Bool
if
120
Bool
eq
120
Int
integer
1
120
Int
identifier
120
x
120
Bool
false
121
Bool
if
121
Bool
eq
121
Int
integer
2
121
Int
identifier
121
x
121
Bool
false
122
Bool
self_dispatch
122
method7
1
122
Int
minus
122
Int
identifier
122
x
122
Int
integer
3
129
E
inherits
129
D
1
method
131
method6
1
131
num
131
Int
131
A
132
A
let
1
let_binding_no_init
132
x
132
Int
133
A
block
2
134
Int
assign
134
x
134
Int
divide
134
Int
identifier
134
num
134
Int
integer
8
135
A
dynamic_dispatch
135
A
new
135
A
135
set_var
1
135
Int
identifier
135
x
156
A2I
no_inherits
6
method
158
c2i
1
158
char
158
String
158
Int
159
Int
if
159
Bool
eq
159
String
identifier
159
char
159
String
string
0
159
Int
integer
0
160
Int
if
160
Bool
eq
160
String
identifier
160
char
160
String
string
1
160
Int
integer
1
161
Int
if
161
Bool
eq
161
String
identifier
161
char
161
String
string
2
161
Int
integer
2
162
Int
if
162
Bool
eq
162
String
identifier
162
char
162
String
string
3
162
Int
integer
3
163
Int
if
163
Bool
eq
163
String
identifier
163
char
163
String
string
4
163
Int
integer
4
164
Int
if
164
Bool
eq
164
String
identifier
164
char
164
String
string
5
164
Int
integer
5
165
Int
if
165
Bool
eq
165
String
identifier
165
char
165
String
string
6
165
Int
integer
6
166
Int
if
166
Bool
eq
166
String
identifier
166
char
166
String
string
7
166
Int
integer
7
167
Int
if
167
Bool
eq
167
String
identifier
167
char
167
String
string
8
167
Int
integer
8
168
Int
if
168
Bool
eq
168
String
identifier
168
char
168
String
string
9
168
Int
integer
9
169
Int
block
2
169
Object
self_dispatch
169
abort
0
169
Int
integer
0
method
177
i2c
1
177
i
177
Int
177
String
178
String
if
178
Bool
eq
178
Int
identifier
178
i
178
Int
integer
0
178
String
string
0
179
String
if
179
Bool
eq
179
Int
identifier
179
i
179
Int
integer
1
179
String
string
1
180
String
if
180
Bool
eq
180
Int
identifier
180
i
180
Int
integer
2
180
String
string
2
181
String
if
181
Bool
eq
181
Int
identifier
181
i
181
Int
integer
3
181
String
string
3
182
String
if
182
Bool
eq
182
Int
identifier
182
i
182
Int
integer
4
182
String
string
4
183
String
if
183
Bool
eq
183
Int
identifier
183
i
183
Int
integer
5
183
String
string
5
184
String
if
184
Bool
eq
184
Int
identifier
184
i
184
Int
integer
6
184
String
string
6
185
String
if
185
Bool
eq
185
Int
identifier
185
i
185
Int
integer
7
185
String
string
7
186
String
if
186
Bool
eq
186
Int
identifier
186
i
186
Int
integer
8
186
String
string
8
187
String
if
187
Bool
eq
187
Int
identifier
187
i
187
Int
integer
9
187
String
string
9
188
String
block
2
188
Object
self_dispatch
188
abort
0
188
String
string

method
200
a2i
1
200
s
200
String
200
Int
201
Int
if
201
Bool
eq
201
Int
dynamic_dispatch
201
String
identifier
201
s
201
length
0
201
Int
integer
0
201
Int
integer
0
202
Int
if
202
Bool
eq
202
String
dynamic_dispatch
202
String
identifier
202
s
202
substr
2
202
Int
integer
0
202
Int
integer
1
202
String
string
-
202
Int
negate
202
Int
self_dispatch
202
a2i_aux
1
202
String
dynamic_dispatch
202
String
identifier
202
s
202
substr
2
202
Int
integer
1
202
Int
minus
202
Int
dynamic_dispatch
202
String
identifier
202
s
202
length
0
202
Int
integer
1
203
Int
if
203
Bool
eq
203
String
dynamic_dispatch
203
String
identifier
203
s
203
substr
2
203
Int
integer
0
203
Int
integer
1
203
String
string
+
203
Int
self_dispatch
203
a2i_aux
1
203
String
dynamic_dispatch
203
String
identifier
203
s
203
substr
2
203
Int
integer
1
203
Int
minus
203
Int
dynamic_dispatch
203
String
identifier
203
s
203
length
0
203
Int
integer
1
204
Int
self_dispatch
204
a2i_aux
1
204
String
identifier
204
s
method
212
a2i_aux
1
212
s
212
String
212
Int
213
Int
let
1
let_binding_init
213
int
213
Int
213
Int
integer
0
214
Int
block
2
215
Object
let
1
let_binding_init
215
j
215
Int
215
Int
dynamic_dispatch
215
String
identifier
215
s
215
length
0
216
Object
let
1
let_binding_init
216
i
216
Int
216
Int
integer
0
217
Object
while
217
Bool
lt
217
Int
identifier
217
i
217
Int
identifier
217
j
218
Int
block
2
219
Int
assign
219
int
219
Int
plus
219
Int
times
219
Int
identifier
219
int
219
Int
integer
10
219
Int
self_dispatch
219
c2i
1
219
String
dynamic_dispatch
219
String
identifier
219
s
219
substr
2
219
Int
identifier
219
i
219
Int
integer
1
220
Int
assign
220
i
220
Int
plus
220
Int
identifier
220
i
220
Int
integer
1
225
Int
identifier
225
int
method
233
i2a
1
233
i
233
Int
233
String
234
String
if
234
Bool
eq
234
Int
identifier
234
i
234
Int
integer
0
234
String
string
0
235
String
if
235
Bool
lt
235
Int
integer
0
235
Int
identifier
235
i
235
String
self_dispatch
235
i2a_aux
1
235
Int
identifier
235
i
236
String
dynamic_dispatch
236
String
string
-
236
concat
1
236
String
self_dispatch
236
i2a_aux
1
236
Int
times
236
Int
identifier
236
i
236
Int
negate
236
Int
integer
1
method
242
i2a_aux
1
242
i
242
Int
242
String
243
String
if
243
Bool
eq
243
Int
identifier
243
i
243
Int
integer
0
243
String
string

244
String
let
1
let_binding_init
244
next
244
Int
244
Int
divide
244
Int
identifier
244
i
244
Int
integer
10
245
String
dynamic_dispatch
245
String
self_dispatch
245
i2a_aux
1
245
Int
identifier
245
next
245
concat
1
245
String
self_dispatch
245
i2c
1
245
Int
minus
245
Int
identifier
245
i
245
Int
times
245
Int
identifier
245
next
245
Int
integer
10
252
Main
inherits
252
IO
11
attribute_no_init
254
char
254
String
attribute_no_init
255
avar
255
A
attribute_no_init
256
a_var
256
A
attribute_init
257
flag
257
Bool
257
Bool
true
method
260
menu
0
260
String
261
String
block
27
262
SELF_TYPE
self_dispatch
262
out_string
1
262
String
string
\n\tTo add a number to 
263
SELF_TYPE
self_dispatch
263
print
1
263
A
identifier
263
avar
264
SELF_TYPE
self_dispatch
264
out_string
1
264
String
string
...enter a:\n
265
SELF_TYPE
self_dispatch
265
out_string
1
265
String
string
\tTo negate 
266
SELF_TYPE
self_dispatch
266
print
1
266
A
identifier
266
avar
267
SELF_TYPE
self_dispatch
267
out_string
1
267
String
string
...enter b:\n
268
SELF_TYPE
self_dispatch
268
out_string
1
268
String
string
\tTo find the difference between 
269
SELF_TYPE
self_dispatch
269
print
1
269
A
identifier
269
avar
270
SELF_TYPE
self_dispatch
270
out_string
1
270
String
string
and another number...enter c:\n
271
SELF_TYPE
self_dispatch
271
out_string
1
271
String
string
\tTo find the factorial of 
272
SELF_TYPE
self_dispatch
272
print
1
272
A
identifier
272
avar
273
SELF_TYPE
self_dispatch
273
out_string
1
273
String
string
...enter d:\n
274
SELF_TYPE
self_dispatch
274
out_string
1
274
String
string
\tTo square 
275
SELF_TYPE
self_dispatch
275
print
1
275
A
identifier
275
avar
276
SELF_TYPE
self_dispatch
276
out_string
1
276
String
string
...enter e:\n
277
SELF_TYPE
self_dispatch
277
out_string
1
277
String
string
\tTo cube 
278
SELF_TYPE
self_dispatch
278
print
1
278
A
identifier
278
avar
279
SELF_TYPE
self_dispatch
279
out_string
1
279
String
string
...enter f:\n
280
SELF_TYPE
self_dispatch
280
out_string
1
280
String
string
\tTo find out if 
281
SELF_TYPE
self_dispatch
281
print
1
281
A
identifier
281
avar
282
SELF_TYPE
self_dispatch
282
out_string
1
282
String
string
is a multiple of 3...enter g:\n
283
SELF_TYPE
self_dispatch
283
out_string
1
283
String
string
\tTo divide 
284
SELF_TYPE
self_dispatch
284
print
1
284
A
identifier
284
avar
285
SELF_TYPE
self_dispatch
285
out_string
1
285
String
string
by 8...enter h:\n
286
SELF_TYPE
self_dispatch
286
out_string
1
286
String
string
\tTo get a new number...enter j:\n
287
SELF_TYPE
self_dispatch
287
out_string
1
287
String
string
\tTo quit...enter q:\n\n
288
String
self_dispatch
288
in_string
0
method
292
prompt
0
292
String
293
String
block
3
294
SELF_TYPE
self_dispatch
294
out_string
1
294
String
string
\n
295
SELF_TYPE
self_dispatch
295
out_string
1
295
String
string
Please enter a number...  
296
String
self_dispatch
296
in_string
0
method
300
get_int
0
300
Int
301
Int
block
1
302
Int
let
1
let_binding_init
302
z
302
A2I
302
A2I
new
302
A2I
303
Int
let
1
let_binding_init
303
s
303
String
303
String
self_dispatch
303
prompt
0
304
Int
dynamic_dispatch
304
A2I
identifier
304
z
304
a2i
1
304
String
identifier
304
s
method
310
is_even
1
310
num
310
Int
310
Bool
311
Bool
let
1
let_binding_init
311
x
311
Int
311
Int
identifier
311
num
312
Bool
if
312
Bool
lt
312
Int
identifier
312
x
312
Int
integer
0
312
Bool
self_dispatch
312
is_even
1
312
Int
negate
312
Int
identifier
312
x
313
Bool
if
313
Bool
eq
313
Int
integer
0
313
Int
identifier
313
x
313
Bool
true
314
Bool
if
314
Bool
eq
314
Int
integer
1
314
Int
identifier
314
x
314
Bool
false
315
Bool
self_dispatch
315
is_even
1
315
Int
minus
315
Int
identifier
315
x
315
Int
integer
2
method
320
class_type
1
320
var
320
A
320
SELF_TYPE
321
SELF_TYPE
case
321
A
identifier
321
var
6
322
a
322
A
322
SELF_TYPE
self_dispatch
322
out_string
1
322
String
string
Class type is now A\n
323
b
323
B
323
SELF_TYPE
self_dispatch
323
out_string
1
323
String
string
Class type is now B\n
324
c
324
C
324
SELF_TYPE
self_dispatch
324
out_string
1
324
String
string
Class type is now C\n
325
d
325
D
325
SELF_TYPE
self_dispatch
325
out_string
1
325
String
string
Class type is now D\n
326
e
326
E
326
SELF_TYPE
self_dispatch
326
out_string
1
326
String
string
Class type is now E\n
327
o
327
Object
327
SELF_TYPE
self_dispatch
327
out_string
1
327
String
string
Oooops\n
method
331
print
1
331
var
331
A
331
SELF_TYPE
332
SELF_TYPE
let
1
let_binding_init
332
z
332
A2I
332
A2I
new
332
A2I
333
SELF_TYPE
block
2
334
SELF_TYPE
self_dispatch
334
out_string
1
334
String
dynamic_dispatch
334
A2I
identifier
334
z
334
i2a
1
334
Int
dynamic_dispatch
334
A
identifier
334
var
334
value
0
335
SELF_TYPE
self_dispatch
335
out_string
1
335
String
string
 
method
340
main
0
340
Object
341
Object
block
2
342
A
assign
342
avar
342
A
new
342
A
343
Object
while
343
Bool
identifier
343
flag
344
Object
block
6
346
SELF_TYPE
self_dispatch
346
out_string
1
346
String
string
number 
347
SELF_TYPE
self_dispatch
347
print
1
347
A
identifier
347
avar
348
SELF_TYPE
if
348
Bool
self_dispatch
348
is_even
1
348
Int
dynamic_dispatch
348
A
identifier
348
avar
348
value
0
349
SELF_TYPE
self_dispatch
349
out_string
1
349
String
string
is even!\n
351
SELF_TYPE
self_dispatch
351
out_string
1
351
String
string
is odd!\n
354
SELF_TYPE
self_dispatch
354
class_type
1
354
A
identifier
354
avar
355
String
assign
355
char
355
String
self_dispatch
355
menu
0
356
Object
if
356
Bool
eq
356
String
identifier
356
char
356
String
string
a
357
B
block
2
358
A
assign
358
a_var
358
A
dynamic_dispatch
358
A
new
358
A
358
set_var
1
358
Int
self_dispatch
358
get_int
0
359
B
assign
359
avar
359
B
dynamic_dispatch
359
B
new
359
B
359
method2
2
359
Int
dynamic_dispatch
359
A
identifier
359
avar
359
value
0
359
Int
dynamic_dispatch
359
A
identifier
359
a_var
359
value
0
361
Object
if
361
Bool
eq
361
String
identifier
361
char
361
String
string
b
362
Object
case
362
A
identifier
362
avar
3
363
c
363
C
363
A
assign
363
avar
363
A
dynamic_dispatch
363
C
identifier
363
c
363
method6
1
363
Int
dynamic_dispatch
363
C
identifier
363
c
363
value
0
364
a
364
A
364
C
assign
364
avar
364
C
dynamic_dispatch
364
A
identifier
364
a
364
method3
1
364
Int
dynamic_dispatch
364
A
identifier
364
a
364
value
0
365
o
365
Object
365
Int
block
3
366
SELF_TYPE
self_dispatch
366
out_string
1
366
String
string
Oooops\n
367
Object
self_dispatch
367
abort
0
367
Int
integer
0
370
Object
if
370
Bool
eq
370
String
identifier
370
char
370
String
string
c
371
D
block
2
372
A
assign
372
a_var
372
A
dynamic_dispatch
372
A
new
372
A
372
set_var
1
372
Int
self_dispatch
372
get_int
0
373
D
assign
373
avar
373
D
dynamic_dispatch
373
D
new
373
D
373
method4
2
373
Int
dynamic_dispatch
373
A
identifier
373
avar
373
value
0
373
Int
dynamic_dispatch
373
A
identifier
373
a_var
373
value
0
375
Object
if
375
Bool
eq
375
String
identifier
375
char
375
String
string
d
375
E
assign
375
avar
375
E
static_dispatch
375
C
new
375
C
375
A
375
method5
1
375
Int
dynamic_dispatch
375
A
identifier
375
avar
375
value
0
377
Object
if
377
Bool
eq
377
String
identifier
377
char
377
String
string
e
377
E
assign
377
avar
377
E
static_dispatch
377
C
new
377
C
377
B
377
method5
1
377
Int
dynamic_dispatch
377
A
identifier
377
avar
377
value
0
379
Object
if
379
Bool
eq
379
String
identifier
379
char
379
String
string
f
379
E
assign
379
avar
379
E
static_dispatch
379
C
new
379
C
379
C
379
method5
1
379
Int
dynamic_dispatch
379
A
identifier
379
avar
379
value
0
381
Object
if
381
Bool
eq
381
String
identifier
381
char
381
String
string
g
382
SELF_TYPE
if
382
Bool
dynamic_dispatch
382
D
new
382
D
382
method7
1
382
Int
dynamic_dispatch
382
A
identifier
382
avar
382
value
0
384
SELF_TYPE
block
3
385
SELF_TYPE
self_dispatch
385
out_string
1
385
String
string
number 
386
SELF_TYPE
self_dispatch
386
print
1
386
A
identifier
386
avar
387
SELF_TYPE
self_dispatch
387
out_string
1
387
String
string
is divisible by 3.\n
390
SELF_TYPE
block
3
391
SELF_TYPE
self_dispatch
391
out_string
1
391
String
string
number 
392
SELF_TYPE
self_dispatch
392
print
1
392
A
identifier
392
avar
393
SELF_TYPE
self_dispatch
393
out_string
1
393
String
string
is not divisible by 3.\n
396
Object
if
396
Bool
eq
396
String
identifier
396
char
396
String
string
h
397
A
let
1
let_binding_no_init
397
x
397
A
398
A
block
3
399
A
assign
399
x
399
A
dynamic_dispatch
399
E
new
399
E
399
method6
1
399
Int
dynamic_dispatch
399
A
identifier
399
avar
399
value
0
400
SELF_TYPE
let
1
let_binding_init
400
r
400
Int
400
Int
minus
400
Int
dynamic_dispatch
400
A
identifier
400
avar
400
value
0
400
Int
times
400
Int
dynamic_dispatch
400
A
identifier
400
x
400
value
0
400
Int
integer
8
401
SELF_TYPE
block
6
402
SELF_TYPE
self_dispatch
402
out_string
1
402
String
string
number 
403
SELF_TYPE
self_dispatch
403
print
1
403
A
identifier
403
avar
404
SELF_TYPE
self_dispatch
404
out_string
1
404
String
string
is equal to 
405
SELF_TYPE
self_dispatch
405
print
1
405
A
identifier
405
x
406
SELF_TYPE
self_dispatch
406
out_string
1
406
String
string
times 8 with a remainder of 
407
SELF_TYPE
let
1
let_binding_init
407
a
407
A2I
407
A2I
new
407
A2I
408
SELF_TYPE
block
2
409
SELF_TYPE
self_dispatch
409
out_string
1
409
String
dynamic_dispatch
409
A2I
identifier
409
a
409
i2a
1
409
Int
identifier
409
r
410
SELF_TYPE
self_dispatch
410
out_string
1
410
String
string
\n
415
A
assign
415
avar
415
A
identifier
415
x
419
Object
if
419
Bool
eq
419
String
identifier
419
char
419
String
string
j
419
A
assign
419
avar
419
A
new
419
A
421
Object
if
421
Bool
eq
421
String
identifier
421
char
421
String
string
q
421
Bool
assign
421
flag
421
Bool
false
423
A
assign
423
avar
423
A
dynamic_dispatch
423
A
new
423
A
423
method1
1
423
Int
dynamic_dispatch
423
A
identifier
423
avar
423
value
0

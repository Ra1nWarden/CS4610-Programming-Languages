7
class
7
type
A
7
lbrace
9
identifier
var
9
colon
9
type
Int
9
larrow
9
integer
0
9
semi
11
identifier
value
11
lparen
11
rparen
11
colon
11
type
Int
11
lbrace
11
identifier
var
11
rbrace
11
semi
13
identifier
set_var
13
lparen
13
identifier
num
13
colon
13
type
Int
13
rparen
13
colon
13
type
SELF_TYPE
13
lbrace
14
lbrace
15
identifier
var
15
larrow
15
identifier
num
15
semi
16
identifier
self
16
semi
17
rbrace
18
rbrace
18
semi
20
identifier
method1
20
lparen
20
identifier
num
20
colon
20
type
Int
20
rparen
20
colon
20
type
SELF_TYPE
20
lbrace
21
identifier
self
22
rbrace
22
semi
24
identifier
method2
24
lparen
24
identifier
num1
24
colon
24
type
Int
24
comma
24
identifier
num2
24
colon
24
type
Int
24
rparen
24
colon
24
type
B
24
lbrace
25
lparen
25
let
25
identifier
x
25
colon
25
type
Int
25
in
26
lbrace
27
identifier
x
27
larrow
27
identifier
num1
27
plus
27
identifier
num2
27
semi
28
lparen
28
new
28
type
B
28
rparen
28
dot
28
identifier
set_var
28
lparen
28
identifier
x
28
rparen
28
semi
29
rbrace
30
rparen
31
rbrace
31
semi
33
identifier
method3
33
lparen
33
identifier
num
33
colon
33
type
Int
33
rparen
33
colon
33
type
C
33
lbrace
34
lparen
34
let
34
identifier
x
34
colon
34
type
Int
34
in
35
lbrace
36
identifier
x
36
larrow
36
tilde
36
identifier
num
36
semi
37
lparen
37
new
37
type
C
37
rparen
37
dot
37
identifier
set_var
37
lparen
37
identifier
x
37
rparen
37
semi
38
rbrace
39
rparen
40
rbrace
40
semi
42
identifier
method4
42
lparen
42
identifier
num1
42
colon
42
type
Int
42
comma
42
identifier
num2
42
colon
42
type
Int
42
rparen
42
colon
42
type
D
42
lbrace
43
if
43
identifier
num2
43
lt
43
identifier
num1
43
then
44
lparen
44
let
44
identifier
x
44
colon
44
type
Int
44
in
45
lbrace
46
identifier
x
46
larrow
46
identifier
num1
46
minus
46
identifier
num2
46
semi
47
lparen
47
new
47
type
D
47
rparen
47
dot
47
identifier
set_var
47
lparen
47
identifier
x
47
rparen
47
semi
48
rbrace
49
rparen
50
else
51
lparen
51
let
51
identifier
x
51
colon
51
type
Int
51
in
52
lbrace
53
identifier
x
53
larrow
53
identifier
num2
53
minus
53
identifier
num1
53
semi
54
lparen
54
new
54
type
D
54
rparen
54
dot
54
identifier
set_var
54
lparen
54
identifier
x
54
rparen
54
semi
55
rbrace
56
rparen
57
fi
58
rbrace
58
semi
60
identifier
method5
60
lparen
60
identifier
num
60
colon
60
type
Int
60
rparen
60
colon
60
type
E
60
lbrace
61
lparen
61
let
61
identifier
x
61
colon
61
type
Int
61
larrow
61
integer
1
61
in
62
lbrace
63
lparen
63
let
63
identifier
y
63
colon
63
type
Int
63
larrow
63
integer
1
63
in
64
while
64
identifier
y
64
le
64
identifier
num
64
loop
65
lbrace
66
identifier
x
66
larrow
66
identifier
x
66
times
66
identifier
y
66
semi
67
identifier
y
67
larrow
67
identifier
y
67
plus
67
integer
1
67
semi
68
rbrace
69
pool
70
rparen
70
semi
71
lparen
71
new
71
type
E
71
rparen
71
dot
71
identifier
set_var
71
lparen
71
identifier
x
71
rparen
71
semi
72
rbrace
73
rparen
74
rbrace
74
semi
76
rbrace
76
semi
78
class
78
type
B
78
inherits
78
type
A
78
lbrace
80
identifier
method5
80
lparen
80
identifier
num
80
colon
80
type
Int
80
rparen
80
colon
80
type
E
80
lbrace
81
lparen
81
let
81
identifier
x
81
colon
81
type
Int
81
in
82
lbrace
83
identifier
x
83
larrow
83
identifier
num
83
times
83
identifier
num
83
semi
84
lparen
84
new
84
type
E
84
rparen
84
dot
84
identifier
set_var
84
lparen
84
identifier
x
84
rparen
84
semi
85
rbrace
86
rparen
87
rbrace
87
semi
89
rbrace
89
semi
91
class
91
type
C
91
inherits
91
type
B
91
lbrace
93
identifier
method6
93
lparen
93
identifier
num
93
colon
93
type
Int
93
rparen
93
colon
93
type
A
93
lbrace
94
lparen
94
let
94
identifier
x
94
colon
94
type
Int
94
in
95
lbrace
96
identifier
x
96
larrow
96
tilde
96
identifier
num
96
semi
97
lparen
97
new
97
type
A
97
rparen
97
dot
97
identifier
set_var
97
lparen
97
identifier
x
97
rparen
97
semi
98
rbrace
99
rparen
100
rbrace
100
semi
102
identifier
method5
102
lparen
102
identifier
num
102
colon
102
type
Int
102
rparen
102
colon
102
type
E
102
lbrace
103
lparen
103
let
103
identifier
x
103
colon
103
type
Int
103
in
104
lbrace
105
identifier
x
105
larrow
105
identifier
num
105
times
105
identifier
num
105
times
105
identifier
num
105
semi
106
lparen
106
new
106
type
E
106
rparen
106
dot
106
identifier
set_var
106
lparen
106
identifier
x
106
rparen
106
semi
107
rbrace
108
rparen
109
rbrace
109
semi
111
rbrace
111
semi
113
class
113
type
D
113
inherits
113
type
B
113
lbrace
115
identifier
method7
115
lparen
115
identifier
num
115
colon
115
type
Int
115
rparen
115
colon
115
type
Bool
115
lbrace
116
lparen
116
let
116
identifier
x
116
colon
116
type
Int
116
larrow
116
identifier
num
116
in
117
if
117
identifier
x
117
lt
117
integer
0
117
then
117
identifier
method7
117
lparen
117
tilde
117
identifier
x
117
rparen
117
else
118
if
118
integer
0
118
equals
118
identifier
x
118
then
118
true
118
else
119
if
119
integer
1
119
equals
119
identifier
x
119
then
119
false
119
else
120
if
120
integer
2
120
equals
120
identifier
x
120
then
120
false
120
else
121
identifier
method7
121
lparen
121
identifier
x
121
minus
121
integer
3
121
rparen
122
fi
122
fi
122
fi
122
fi
123
rparen
124
rbrace
124
semi
126
rbrace
126
semi
128
class
128
type
E
128
inherits
128
type
D
128
lbrace
130
identifier
method6
130
lparen
130
identifier
num
130
colon
130
type
Int
130
rparen
130
colon
130
type
A
130
lbrace
131
lparen
131
let
131
identifier
x
131
colon
131
type
Int
131
in
132
lbrace
133
identifier
x
133
larrow
133
identifier
num
133
divide
133
integer
8
133
semi
134
lparen
134
new
134
type
A
134
rparen
134
dot
134
identifier
set_var
134
lparen
134
identifier
x
134
rparen
134
semi
135
rbrace
136
rparen
137
rbrace
137
semi
139
rbrace
139
semi
155
class
155
type
A2I
155
lbrace
157
identifier
c2i
157
lparen
157
identifier
char
157
colon
157
type
String
157
rparen
157
colon
157
type
Int
157
lbrace
158
if
158
identifier
char
158
equals
158
string
0
158
then
158
integer
0
158
else
159
if
159
identifier
char
159
equals
159
string
1
159
then
159
integer
1
159
else
160
if
160
identifier
char
160
equals
160
string
2
160
then
160
integer
2
160
else
161
if
161
identifier
char
161
equals
161
string
3
161
then
161
integer
3
161
else
162
if
162
identifier
char
162
equals
162
string
4
162
then
162
integer
4
162
else
163
if
163
identifier
char
163
equals
163
string
5
163
then
163
integer
5
163
else
164
if
164
identifier
char
164
equals
164
string
6
164
then
164
integer
6
164
else
165
if
165
identifier
char
165
equals
165
string
7
165
then
165
integer
7
165
else
166
if
166
identifier
char
166
equals
166
string
8
166
then
166
integer
8
166
else
167
if
167
identifier
char
167
equals
167
string
9
167
then
167
integer
9
167
else
168
lbrace
168
identifier
abort
168
lparen
168
rparen
168
semi
168
integer
0
168
semi
168
rbrace
170
fi
170
fi
170
fi
170
fi
170
fi
170
fi
170
fi
170
fi
170
fi
170
fi
171
rbrace
171
semi
176
identifier
i2c
176
lparen
176
identifier
i
176
colon
176
type
Int
176
rparen
176
colon
176
type
String
176
lbrace
177
if
177
identifier
i
177
equals
177
integer
0
177
then
177
string
0
177
else
178
if
178
identifier
i
178
equals
178
integer
1
178
then
178
string
1
178
else
179
if
179
identifier
i
179
equals
179
integer
2
179
then
179
string
2
179
else
180
if
180
identifier
i
180
equals
180
integer
3
180
then
180
string
3
180
else
181
if
181
identifier
i
181
equals
181
integer
4
181
then
181
string
4
181
else
182
if
182
identifier
i
182
equals
182
integer
5
182
then
182
string
5
182
else
183
if
183
identifier
i
183
equals
183
integer
6
183
then
183
string
6
183
else
184
if
184
identifier
i
184
equals
184
integer
7
184
then
184
string
7
184
else
185
if
185
identifier
i
185
equals
185
integer
8
185
then
185
string
8
185
else
186
if
186
identifier
i
186
equals
186
integer
9
186
then
186
string
9
186
else
187
lbrace
187
identifier
abort
187
lparen
187
rparen
187
semi
187
string

187
semi
187
rbrace
188
fi
188
fi
188
fi
188
fi
188
fi
188
fi
188
fi
188
fi
188
fi
188
fi
189
rbrace
189
semi
199
identifier
a2i
199
lparen
199
identifier
s
199
colon
199
type
String
199
rparen
199
colon
199
type
Int
199
lbrace
200
if
200
identifier
s
200
dot
200
identifier
length
200
lparen
200
rparen
200
equals
200
integer
0
200
then
200
integer
0
200
else
201
if
201
identifier
s
201
dot
201
identifier
substr
201
lparen
201
integer
0
201
comma
201
integer
1
201
rparen
201
equals
201
string
-
201
then
201
tilde
201
identifier
a2i_aux
201
lparen
201
identifier
s
201
dot
201
identifier
substr
201
lparen
201
integer
1
201
comma
201
identifier
s
201
dot
201
identifier
length
201
lparen
201
rparen
201
minus
201
integer
1
201
rparen
201
rparen
201
else
202
if
202
identifier
s
202
dot
202
identifier
substr
202
lparen
202
integer
0
202
comma
202
integer
1
202
rparen
202
equals
202
string
+
202
then
202
identifier
a2i_aux
202
lparen
202
identifier
s
202
dot
202
identifier
substr
202
lparen
202
integer
1
202
comma
202
identifier
s
202
dot
202
identifier
length
202
lparen
202
rparen
202
minus
202
integer
1
202
rparen
202
rparen
202
else
203
identifier
a2i_aux
203
lparen
203
identifier
s
203
rparen
204
fi
204
fi
204
fi
205
rbrace
205
semi
211
identifier
a2i_aux
211
lparen
211
identifier
s
211
colon
211
type
String
211
rparen
211
colon
211
type
Int
211
lbrace
212
lparen
212
let
212
identifier
int
212
colon
212
type
Int
212
larrow
212
integer
0
212
in
213
lbrace
214
lparen
214
let
214
identifier
j
214
colon
214
type
Int
214
larrow
214
identifier
s
214
dot
214
identifier
length
214
lparen
214
rparen
214
in
215
lparen
215
let
215
identifier
i
215
colon
215
type
Int
215
larrow
215
integer
0
215
in
216
while
216
identifier
i
216
lt
216
identifier
j
216
loop
217
lbrace
218
identifier
int
218
larrow
218
identifier
int
218
times
218
integer
10
218
plus
218
identifier
c2i
218
lparen
218
identifier
s
218
dot
218
identifier
substr
218
lparen
218
identifier
i
218
comma
218
integer
1
218
rparen
218
rparen
218
semi
219
identifier
i
219
larrow
219
identifier
i
219
plus
219
integer
1
219
semi
220
rbrace
221
pool
222
rparen
223
rparen
223
semi
224
identifier
int
224
semi
225
rbrace
226
rparen
227
rbrace
227
semi
232
identifier
i2a
232
lparen
232
identifier
i
232
colon
232
type
Int
232
rparen
232
colon
232
type
String
232
lbrace
233
if
233
identifier
i
233
equals
233
integer
0
233
then
233
string
0
233
else
234
if
234
integer
0
234
lt
234
identifier
i
234
then
234
identifier
i2a_aux
234
lparen
234
identifier
i
234
rparen
234
else
235
string
-
235
dot
235
identifier
concat
235
lparen
235
identifier
i2a_aux
235
lparen
235
identifier
i
235
times
235
tilde
235
integer
1
235
rparen
235
rparen
236
fi
236
fi
237
rbrace
237
semi
241
identifier
i2a_aux
241
lparen
241
identifier
i
241
colon
241
type
Int
241
rparen
241
colon
241
type
String
241
lbrace
242
if
242
identifier
i
242
equals
242
integer
0
242
then
242
string

242
else
243
lparen
243
let
243
identifier
next
243
colon
243
type
Int
243
larrow
243
identifier
i
243
divide
243
integer
10
243
in
244
identifier
i2a_aux
244
lparen
244
identifier
next
244
rparen
244
dot
244
identifier
concat
244
lparen
244
identifier
i2c
244
lparen
244
identifier
i
244
minus
244
identifier
next
244
times
244
integer
10
244
rparen
244
rparen
245
rparen
246
fi
247
rbrace
247
semi
249
rbrace
249
semi
251
class
251
type
Main
251
inherits
251
type
IO
251
lbrace
253
identifier
char
253
colon
253
type
String
253
semi
254
identifier
avar
254
colon
254
type
A
254
semi
255
identifier
a_var
255
colon
255
type
A
255
semi
256
identifier
flag
256
colon
256
type
Bool
256
larrow
256
true
256
semi
259
identifier
menu
259
lparen
259
rparen
259
colon
259
type
String
259
lbrace
260
lbrace
261
identifier
out_string
261
lparen
261
string
\n\tTo add a number to 
261
rparen
261
semi
262
identifier
print
262
lparen
262
identifier
avar
262
rparen
262
semi
263
identifier
out_string
263
lparen
263
string
...enter a:\n
263
rparen
263
semi
264
identifier
out_string
264
lparen
264
string
\tTo negate 
264
rparen
264
semi
265
identifier
print
265
lparen
265
identifier
avar
265
rparen
265
semi
266
identifier
out_string
266
lparen
266
string
...enter b:\n
266
rparen
266
semi
267
identifier
out_string
267
lparen
267
string
\tTo find the difference between 
267
rparen
267
semi
268
identifier
print
268
lparen
268
identifier
avar
268
rparen
268
semi
269
identifier
out_string
269
lparen
269
string
and another number...enter c:\n
269
rparen
269
semi
270
identifier
out_string
270
lparen
270
string
\tTo find the factorial of 
270
rparen
270
semi
271
identifier
print
271
lparen
271
identifier
avar
271
rparen
271
semi
272
identifier
out_string
272
lparen
272
string
...enter d:\n
272
rparen
272
semi
273
identifier
out_string
273
lparen
273
string
\tTo square 
273
rparen
273
semi
274
identifier
print
274
lparen
274
identifier
avar
274
rparen
274
semi
275
identifier
out_string
275
lparen
275
string
...enter e:\n
275
rparen
275
semi
276
identifier
out_string
276
lparen
276
string
\tTo cube 
276
rparen
276
semi
277
identifier
print
277
lparen
277
identifier
avar
277
rparen
277
semi
278
identifier
out_string
278
lparen
278
string
...enter f:\n
278
rparen
278
semi
279
identifier
out_string
279
lparen
279
string
\tTo find out if 
279
rparen
279
semi
280
identifier
print
280
lparen
280
identifier
avar
280
rparen
280
semi
281
identifier
out_string
281
lparen
281
string
is a multiple of 3...enter g:\n
281
rparen
281
semi
282
identifier
out_string
282
lparen
282
string
\tTo divide 
282
rparen
282
semi
283
identifier
print
283
lparen
283
identifier
avar
283
rparen
283
semi
284
identifier
out_string
284
lparen
284
string
by 8...enter h:\n
284
rparen
284
semi
285
identifier
out_string
285
lparen
285
string
\tTo get a new number...enter j:\n
285
rparen
285
semi
286
identifier
out_string
286
lparen
286
string
\tTo quit...enter q:\n\n
286
rparen
286
semi
287
identifier
in_string
287
lparen
287
rparen
287
semi
288
rbrace
289
rbrace
289
semi
291
identifier
prompt
291
lparen
291
rparen
291
colon
291
type
String
291
lbrace
292
lbrace
293
identifier
out_string
293
lparen
293
string
\n
293
rparen
293
semi
294
identifier
out_string
294
lparen
294
string
Please enter a number...  
294
rparen
294
semi
295
identifier
in_string
295
lparen
295
rparen
295
semi
296
rbrace
297
rbrace
297
semi
299
identifier
get_int
299
lparen
299
rparen
299
colon
299
type
Int
299
lbrace
300
lbrace
301
lparen
301
let
301
identifier
z
301
colon
301
type
A2I
301
larrow
301
new
301
type
A2I
301
in
302
lparen
302
let
302
identifier
s
302
colon
302
type
String
302
larrow
302
identifier
prompt
302
lparen
302
rparen
302
in
303
identifier
z
303
dot
303
identifier
a2i
303
lparen
303
identifier
s
303
rparen
304
rparen
305
rparen
305
semi
306
rbrace
307
rbrace
307
semi
309
identifier
is_even
309
lparen
309
identifier
num
309
colon
309
type
Int
309
rparen
309
colon
309
type
Bool
309
lbrace
310
lparen
310
let
310
identifier
x
310
colon
310
type
Int
310
larrow
310
identifier
num
310
in
311
if
311
identifier
x
311
lt
311
integer
0
311
then
311
identifier
is_even
311
lparen
311
tilde
311
identifier
x
311
rparen
311
else
312
if
312
integer
0
312
equals
312
identifier
x
312
then
312
true
312
else
313
if
313
integer
1
313
equals
313
identifier
x
313
then
313
false
313
else
314
identifier
is_even
314
lparen
314
identifier
x
314
minus
314
integer
2
314
rparen
315
fi
315
fi
315
fi
316
rparen
317
rbrace
317
semi
319
identifier
class_type
319
lparen
319
identifier
var
319
colon
319
type
A
319
rparen
319
colon
319
type
SELF_TYPE
319
lbrace
320
case
320
identifier
var
320
of
321
identifier
a
321
colon
321
type
A
321
rarrow
321
identifier
out_string
321
lparen
321
string
Class type is now A\n
321
rparen
321
semi
322
identifier
b
322
colon
322
type
B
322
rarrow
322
identifier
out_string
322
lparen
322
string
Class type is now B\n
322
rparen
322
semi
323
identifier
c
323
colon
323
type
C
323
rarrow
323
identifier
out_string
323
lparen
323
string
Class type is now C\n
323
rparen
323
semi
324
identifier
d
324
colon
324
type
D
324
rarrow
324
identifier
out_string
324
lparen
324
string
Class type is now D\n
324
rparen
324
semi
325
identifier
e
325
colon
325
type
E
325
rarrow
325
identifier
out_string
325
lparen
325
string
Class type is now E\n
325
rparen
325
semi
326
identifier
o
326
colon
326
type
Object
326
rarrow
326
identifier
out_string
326
lparen
326
string
Oooops\n
326
rparen
326
semi
327
esac
328
rbrace
328
semi
330
identifier
print
330
lparen
330
identifier
var
330
colon
330
type
A
330
rparen
330
colon
330
type
SELF_TYPE
330
lbrace
331
lparen
331
let
331
identifier
z
331
colon
331
type
A2I
331
larrow
331
new
331
type
A2I
331
in
332
lbrace
333
identifier
out_string
333
lparen
333
identifier
z
333
dot
333
identifier
i2a
333
lparen
333
identifier
var
333
dot
333
identifier
value
333
lparen
333
rparen
333
rparen
333
rparen
333
semi
334
identifier
out_string
334
lparen
334
string
 
334
rparen
334
semi
335
rbrace
336
rparen
337
rbrace
337
semi
339
identifier
main
339
lparen
339
rparen
339
colon
339
type
Object
339
lbrace
340
lbrace
341
identifier
avar
341
larrow
341
lparen
341
new
341
type
A
341
rparen
341
semi
342
while
342
identifier
flag
342
loop
343
lbrace
345
identifier
out_string
345
lparen
345
string
number 
345
rparen
345
semi
346
identifier
print
346
lparen
346
identifier
avar
346
rparen
346
semi
347
if
347
identifier
is_even
347
lparen
347
identifier
avar
347
dot
347
identifier
value
347
lparen
347
rparen
347
rparen
347
then
348
identifier
out_string
348
lparen
348
string
is even!\n
348
rparen
349
else
350
identifier
out_string
350
lparen
350
string
is odd!\n
350
rparen
351
fi
351
semi
353
identifier
class_type
353
lparen
353
identifier
avar
353
rparen
353
semi
354
identifier
char
354
larrow
354
identifier
menu
354
lparen
354
rparen
354
semi
355
if
355
identifier
char
355
equals
355
string
a
355
then
356
lbrace
357
identifier
a_var
357
larrow
357
lparen
357
new
357
type
A
357
rparen
357
dot
357
identifier
set_var
357
lparen
357
identifier
get_int
357
lparen
357
rparen
357
rparen
357
semi
358
identifier
avar
358
larrow
358
lparen
358
new
358
type
B
358
rparen
358
dot
358
identifier
method2
358
lparen
358
identifier
avar
358
dot
358
identifier
value
358
lparen
358
rparen
358
comma
358
identifier
a_var
358
dot
358
identifier
value
358
lparen
358
rparen
358
rparen
358
semi
359
rbrace
359
else
360
if
360
identifier
char
360
equals
360
string
b
360
then
361
case
361
identifier
avar
361
of
362
identifier
c
362
colon
362
type
C
362
rarrow
362
identifier
avar
362
larrow
362
identifier
c
362
dot
362
identifier
method6
362
lparen
362
identifier
c
362
dot
362
identifier
value
362
lparen
362
rparen
362
rparen
362
semi
363
identifier
a
363
colon
363
type
A
363
rarrow
363
identifier
avar
363
larrow
363
identifier
a
363
dot
363
identifier
method3
363
lparen
363
identifier
a
363
dot
363
identifier
value
363
lparen
363
rparen
363
rparen
363
semi
364
identifier
o
364
colon
364
type
Object
364
rarrow
364
lbrace
365
identifier
out_string
365
lparen
365
string
Oooops\n
365
rparen
365
semi
366
identifier
abort
366
lparen
366
rparen
366
semi
366
integer
0
366
semi
367
rbrace
367
semi
368
esac
368
else
369
if
369
identifier
char
369
equals
369
string
c
369
then
370
lbrace
371
identifier
a_var
371
larrow
371
lparen
371
new
371
type
A
371
rparen
371
dot
371
identifier
set_var
371
lparen
371
identifier
get_int
371
lparen
371
rparen
371
rparen
371
semi
372
identifier
avar
372
larrow
372
lparen
372
new
372
type
D
372
rparen
372
dot
372
identifier
method4
372
lparen
372
identifier
avar
372
dot
372
identifier
value
372
lparen
372
rparen
372
comma
372
identifier
a_var
372
dot
372
identifier
value
372
lparen
372
rparen
372
rparen
372
semi
373
rbrace
373
else
374
if
374
identifier
char
374
equals
374
string
d
374
then
374
identifier
avar
374
larrow
374
lparen
374
new
374
type
C
374
rparen
374
at
374
type
A
374
dot
374
identifier
method5
374
lparen
374
identifier
avar
374
dot
374
identifier
value
374
lparen
374
rparen
374
rparen
374
else
376
if
376
identifier
char
376
equals
376
string
e
376
then
376
identifier
avar
376
larrow
376
lparen
376
new
376
type
C
376
rparen
376
at
376
type
B
376
dot
376
identifier
method5
376
lparen
376
identifier
avar
376
dot
376
identifier
value
376
lparen
376
rparen
376
rparen
376
else
378
if
378
identifier
char
378
equals
378
string
f
378
then
378
identifier
avar
378
larrow
378
lparen
378
new
378
type
C
378
rparen
378
at
378
type
C
378
dot
378
identifier
method5
378
lparen
378
identifier
avar
378
dot
378
identifier
value
378
lparen
378
rparen
378
rparen
378
else
380
if
380
identifier
char
380
equals
380
string
g
380
then
381
if
381
lparen
381
lparen
381
new
381
type
D
381
rparen
381
dot
381
identifier
method7
381
lparen
381
identifier
avar
381
dot
381
identifier
value
381
lparen
381
rparen
381
rparen
381
rparen
382
then
383
lbrace
384
identifier
out_string
384
lparen
384
string
number 
384
rparen
384
semi
385
identifier
print
385
lparen
385
identifier
avar
385
rparen
385
semi
386
identifier
out_string
386
lparen
386
string
is divisible by 3.\n
386
rparen
386
semi
387
rbrace
388
else
389
lbrace
390
identifier
out_string
390
lparen
390
string
number 
390
rparen
390
semi
391
identifier
print
391
lparen
391
identifier
avar
391
rparen
391
semi
392
identifier
out_string
392
lparen
392
string
is not divisible by 3.\n
392
rparen
392
semi
393
rbrace
394
fi
394
else
395
if
395
identifier
char
395
equals
395
string
h
395
then
396
lparen
396
let
396
identifier
x
396
colon
396
type
A
396
in
397
lbrace
398
identifier
x
398
larrow
398
lparen
398
new
398
type
E
398
rparen
398
dot
398
identifier
method6
398
lparen
398
identifier
avar
398
dot
398
identifier
value
398
lparen
398
rparen
398
rparen
398
semi
399
lparen
399
let
399
identifier
r
399
colon
399
type
Int
399
larrow
399
lparen
399
identifier
avar
399
dot
399
identifier
value
399
lparen
399
rparen
399
minus
399
lparen
399
identifier
x
399
dot
399
identifier
value
399
lparen
399
rparen
399
times
399
integer
8
399
rparen
399
rparen
399
in
400
lbrace
401
identifier
out_string
401
lparen
401
string
number 
401
rparen
401
semi
402
identifier
print
402
lparen
402
identifier
avar
402
rparen
402
semi
403
identifier
out_string
403
lparen
403
string
is equal to 
403
rparen
403
semi
404
identifier
print
404
lparen
404
identifier
x
404
rparen
404
semi
405
identifier
out_string
405
lparen
405
string
times 8 with a remainder of 
405
rparen
405
semi
406
lparen
406
let
406
identifier
a
406
colon
406
type
A2I
406
larrow
406
new
406
type
A2I
406
in
407
lbrace
408
identifier
out_string
408
lparen
408
identifier
a
408
dot
408
identifier
i2a
408
lparen
408
identifier
r
408
rparen
408
rparen
408
semi
409
identifier
out_string
409
lparen
409
string
\n
409
rparen
409
semi
410
rbrace
411
rparen
411
semi
412
rbrace
413
rparen
413
semi
414
identifier
avar
414
larrow
414
identifier
x
414
semi
415
rbrace
416
rparen
417
else
418
if
418
identifier
char
418
equals
418
string
j
418
then
418
identifier
avar
418
larrow
418
lparen
418
new
418
type
A
418
rparen
419
else
420
if
420
identifier
char
420
equals
420
string
q
420
then
420
identifier
flag
420
larrow
420
false
421
else
422
identifier
avar
422
larrow
422
lparen
422
new
422
type
A
422
rparen
422
dot
422
identifier
method1
422
lparen
422
identifier
avar
422
dot
422
identifier
value
422
lparen
422
rparen
422
rparen
423
fi
423
fi
423
fi
423
fi
423
fi
423
fi
423
fi
423
fi
423
fi
423
fi
423
semi
424
rbrace
425
pool
425
semi
426
rbrace
427
rbrace
427
semi
429
rbrace
429
semi
